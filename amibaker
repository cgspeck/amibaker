#!/usr/bin/env python

import yaml
import argparse
from jinja2 import Template
import time
from awsclpy import AWSCLPy

VERSION = '0.1'


class AmiBaker:
    def __init__(self, recipe):
        self.recipe = yaml.load(recipe)
        self.__render_tags()

        self.__bake()

    def __render_tags(self):
        def render(tags):
            for key, value in tags.iteritems():
                template = TagTemplate(value)
                tags[key] = template.render()

        render(self.recipe['ec2_tags'])
        render(self.recipe['ami_tags'])

    def __bake(self):
        ec2 = AmiEc2(**self.recipe)
        ec2.instantiate()
        Provisioner(ec2, self.recipe['provisioning_script'])
        ec2.terminate()


class AmiEc2:
    def __init__(self, **kwargs):
        self.awscli = AWSCLPy(**kwargs['awscli_args'])

    def instantiate(self):
        pass

    def terminate(self):
        pass


class Provisioner:
    def __init__(self, ec2, script):
        pass


class TagTemplate(Template):
    def __append(self, kwargs, key, value):
        if key not in kwargs:
            kwargs[key] = int(value)

    def render(self, *args, **kwargs):
        self.__append(kwargs, 'timestamp', int(time.time()))

        return super(TagTemplate, self).render(args, **kwargs)


if __name__ == "__main__":
    argparser = argparse.ArgumentParser()

    argparser.add_argument('recipe',
                           nargs='+',
                           type=argparse.FileType('r'),
                           help='Recipe to bake image from.')

    argparser.add_argument('-d', '--debug',
                           action='store_true',
                           help='Enabled debug mode. Will not terminate instance on failure.')

    argparser.add_argument('-v', '--version',
                           action='version',
                           version='%(prog)s ' + VERSION,
                           help='Shows version number.')

    args = argparser.parse_args()

    for recipe in args.recipe:
        AmiBaker(recipe)
