#!/usr/bin/env python

import yaml
import argparse
from jinja2 import Template
import time

VERSION = '0.1'


class AMIBaker:
    def __init__(self, recipe):
        self.recipe = yaml.load(recipe)
        self.__render_tags(self.recipe['ami_tags'])
        self.__render_tags(self.recipe['ec2_tags'])

    def __render_tags(self, tags):
        for tag in tags:
            for key, value in tag.iteritems():
                template = TagTemplate(value)
                tag[key] = template.render()


class TagTemplate(Template):
    def __append(self, kwargs, key, value):
        if key not in kwargs:
            kwargs[key] = int(value)

    def render(self, *args, **kwargs):
        self.__append(kwargs, 'timestamp', int(time.time()))

        return super(TagTemplate, self).render(args, **kwargs)


if __name__ == "__main__":
    argparser = argparse.ArgumentParser()

    argparser.add_argument('recipe',
                           nargs='+',
                           type=argparse.FileType('r'),
                           help='Recipe to bake image from.')

    argparser.add_argument('-d', '--debug',
                           action='store_true',
                           help='Enabled debug mode. Will not terminate instance on failure.')

    argparser.add_argument('-v', '--version',
                           action='version',
                           version='%(prog)s ' + VERSION,
                           help='Shows version number.')

    args = argparser.parse_args()

    for recipe in args.recipe:
        AMIBaker(recipe)
